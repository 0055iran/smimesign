skip_branch_with_pr: true
version: '{build}-{branch}'

os: 'Visual Studio 2015'

clone_folder: C:\gopath\src\github.com\github\smimesign

environment:
  pfx_password:
    secure: WfQzoLeQ6dGF2NnDKhZX6ai/k5s+qWyWLdIZoAjPineepfZeXovgrB2bmOtZfO2d

init:
  # Always build with CGO
  - set CGO_ENABLED=1
  # Paths and Go environment
  - set GOPATH=c:\gopath
  - set GOROOT=c:\go
  - set PATH=%GOROOT%\bin;%GOPATH%\bin;C:\msys64\usr\bin;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin;%PATH%
  - set PATH_WAS=%PATH%

install:
  - go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
  - cinst InnoSetup -y

before_build:
  # Figure out version numbers
  - git describe --tags > version
  - set /p GIT_VERSION= < version
  - FOR /F "delims=.- tokens=1" %%G IN (version) DO set VERSION_MAJOR=%%G
  - FOR /F "delims=.- tokens=2" %%G IN (version) DO set VERSION_MINOR=%%G
  - FOR /F "delims=.- tokens=3" %%G IN (version) DO set VERSION_PATCH=%%G
  # Generate resource.syso
  - go generate

build_script:
  # Build x64 binary
  - set GOARCH=amd64
  - set PATH=C:\msys64\MINGW64\bin;%PATH_WAS%
  - go build -o smimesign-amd64.exe -ldflags "-X main.versionString=%GIT_VERSION%" .
  # Build x86 binary
  - set GOARCH=386
  - set PATH=C:\msys64\MINGW32\bin;%PATH_WAS%
  - go build -o smimesign-386.exe -ldflags "-X main.versionString=%GIT_VERSION%" .

after_build:
  # Sign binaries
  - if "%pfx_password%" NEQ "" (signtool.exe sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /p %pfx_password% /f windows-installer\codesign.pfx smimesign-amd64.exe)
  - if "%pfx_password%" NEQ "" (signtool.exe sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /p %pfx_password% /f windows-installer\codesign.pfx smimesign-386.exe)
  # Build zip archives
  - 7z a smimesign-windows-amd64-%GIT_VERSION%.zip smimesign-amd64.exe
  - 7z a smimesign-windows-386-%GIT_VERSION%.zip smimesign-386.exe
  # Build installer
  - iscc windows-installer/inno-setup-smimesign-installer.iss
  # Sign installer â€” AppVeyor's "secure variables" aren't included in PR builds,
  # so we skip this step if the PFX password is missing.
  - if "%pfx_password%" NEQ "" (signtool.exe sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /p %pfx_password% /f windows-installer\codesign.pfx smimesign-windows-*.exe)

test_script:
  - go test -v ./...

artifacts:
  - path: smimesign-windows-*.exe
  - path: smimesign-windows-*.zip

deploy:
  tag: $(GIT_VERSION)
  release: v$(GIT_VERSION)
  description: v$(GIT_VERSION)
  provider: GitHub
  auth_token:
    secure: sEpJVeD+tAT8soMS72SeGXEv1UVg7gG1ySy8rEfAO1T5HCaxD3jE6YoGmYOvKcbx
  artifact: /smimesign-windows-.*\.(exe|zip)/
  draft: false
  prerelease: false
  on:
    branch: master
    appveyor_repo_tag: true
